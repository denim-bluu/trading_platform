// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: trade_execution_service.proto

package trade_execution_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderType int32

const (
	OrderType_MARKET OrderType = 0
	OrderType_LIMIT  OrderType = 1
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "MARKET",
		1: "LIMIT",
	}
	OrderType_value = map[string]int32{
		"MARKET": 0,
		"LIMIT":  1,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_trade_execution_service_proto_enumTypes[0].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_trade_execution_service_proto_enumTypes[0]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_trade_execution_service_proto_rawDescGZIP(), []int{0}
}

type ExecutionStatusType int32

const (
	ExecutionStatusType_PENDING   ExecutionStatusType = 0
	ExecutionStatusType_PARTIAL   ExecutionStatusType = 1
	ExecutionStatusType_COMPLETED ExecutionStatusType = 2
	ExecutionStatusType_FAILED    ExecutionStatusType = 3
)

// Enum value maps for ExecutionStatusType.
var (
	ExecutionStatusType_name = map[int32]string{
		0: "PENDING",
		1: "PARTIAL",
		2: "COMPLETED",
		3: "FAILED",
	}
	ExecutionStatusType_value = map[string]int32{
		"PENDING":   0,
		"PARTIAL":   1,
		"COMPLETED": 2,
		"FAILED":    3,
	}
)

func (x ExecutionStatusType) Enum() *ExecutionStatusType {
	p := new(ExecutionStatusType)
	*p = x
	return p
}

func (x ExecutionStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_trade_execution_service_proto_enumTypes[1].Descriptor()
}

func (ExecutionStatusType) Type() protoreflect.EnumType {
	return &file_trade_execution_service_proto_enumTypes[1]
}

func (x ExecutionStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionStatusType.Descriptor instead.
func (ExecutionStatusType) EnumDescriptor() ([]byte, []int) {
	return file_trade_execution_service_proto_rawDescGZIP(), []int{1}
}

type ExecuteTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *ExecuteTradesRequest) Reset() {
	*x = ExecuteTradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_execution_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTradesRequest) ProtoMessage() {}

func (x *ExecuteTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trade_execution_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTradesRequest.ProtoReflect.Descriptor instead.
func (*ExecuteTradesRequest) Descriptor() ([]byte, []int) {
	return file_trade_execution_service_proto_rawDescGZIP(), []int{0}
}

func (x *ExecuteTradesRequest) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol   string    `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Type     OrderType `protobuf:"varint,2,opt,name=type,proto3,enum=tradeexecutionservice.OrderType" json:"type,omitempty"`
	Quantity int32     `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price    float64   `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"` // For limit orders
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_execution_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_trade_execution_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_trade_execution_service_proto_rawDescGZIP(), []int{1}
}

func (x *Order) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Order) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_MARKET
}

func (x *Order) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Order) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type ExecuteTradesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionId string                  `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Results     []*OrderExecutionResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ExecuteTradesResponse) Reset() {
	*x = ExecuteTradesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_execution_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTradesResponse) ProtoMessage() {}

func (x *ExecuteTradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trade_execution_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTradesResponse.ProtoReflect.Descriptor instead.
func (*ExecuteTradesResponse) Descriptor() ([]byte, []int) {
	return file_trade_execution_service_proto_rawDescGZIP(), []int{2}
}

func (x *ExecuteTradesResponse) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *ExecuteTradesResponse) GetResults() []*OrderExecutionResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type OrderExecutionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol         string           `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Status         *ExecutionStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	FilledQuantity int32            `protobuf:"varint,3,opt,name=filled_quantity,json=filledQuantity,proto3" json:"filled_quantity,omitempty"`
	AveragePrice   float64          `protobuf:"fixed64,4,opt,name=average_price,json=averagePrice,proto3" json:"average_price,omitempty"`
}

func (x *OrderExecutionResult) Reset() {
	*x = OrderExecutionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_execution_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderExecutionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderExecutionResult) ProtoMessage() {}

func (x *OrderExecutionResult) ProtoReflect() protoreflect.Message {
	mi := &file_trade_execution_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderExecutionResult.ProtoReflect.Descriptor instead.
func (*OrderExecutionResult) Descriptor() ([]byte, []int) {
	return file_trade_execution_service_proto_rawDescGZIP(), []int{3}
}

func (x *OrderExecutionResult) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *OrderExecutionResult) GetStatus() *ExecutionStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *OrderExecutionResult) GetFilledQuantity() int32 {
	if x != nil {
		return x.FilledQuantity
	}
	return 0
}

func (x *OrderExecutionResult) GetAveragePrice() float64 {
	if x != nil {
		return x.AveragePrice
	}
	return 0
}

type GetExecutionStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionId string `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
}

func (x *GetExecutionStatusRequest) Reset() {
	*x = GetExecutionStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_execution_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionStatusRequest) ProtoMessage() {}

func (x *GetExecutionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trade_execution_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionStatusRequest.ProtoReflect.Descriptor instead.
func (*GetExecutionStatusRequest) Descriptor() ([]byte, []int) {
	return file_trade_execution_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetExecutionStatusRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

type ExecutionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionId string                  `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Status      ExecutionStatusType     `protobuf:"varint,2,opt,name=status,proto3,enum=tradeexecutionservice.ExecutionStatusType" json:"status,omitempty"`
	Results     []*OrderExecutionResult `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ExecutionStatus) Reset() {
	*x = ExecutionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_execution_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionStatus) ProtoMessage() {}

func (x *ExecutionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_trade_execution_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionStatus.ProtoReflect.Descriptor instead.
func (*ExecutionStatus) Descriptor() ([]byte, []int) {
	return file_trade_execution_service_proto_rawDescGZIP(), []int{5}
}

func (x *ExecutionStatus) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *ExecutionStatus) GetStatus() ExecutionStatusType {
	if x != nil {
		return x.Status
	}
	return ExecutionStatusType_PENDING
}

func (x *ExecutionStatus) GetResults() []*OrderExecutionResult {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_trade_execution_service_proto protoreflect.FileDescriptor

var file_trade_execution_service_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x15, 0x74, 0x72, 0x61, 0x64, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x4c, 0x0a, 0x14, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x81,
	0x01, 0x0a, 0x15, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x3e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xbf, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x2a, 0x22, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x2a, 0x4a, 0x0a, 0x13, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50,
	0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x03, 0x32, 0xf7, 0x01, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x64, 0x65, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6c, 0x0a,
	0x0d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x2b,
	0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x30, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x42, 0x3d, 0x5a,
	0x3b, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x2d, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trade_execution_service_proto_rawDescOnce sync.Once
	file_trade_execution_service_proto_rawDescData = file_trade_execution_service_proto_rawDesc
)

func file_trade_execution_service_proto_rawDescGZIP() []byte {
	file_trade_execution_service_proto_rawDescOnce.Do(func() {
		file_trade_execution_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_trade_execution_service_proto_rawDescData)
	})
	return file_trade_execution_service_proto_rawDescData
}

var file_trade_execution_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_trade_execution_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_trade_execution_service_proto_goTypes = []any{
	(OrderType)(0),                    // 0: tradeexecutionservice.OrderType
	(ExecutionStatusType)(0),          // 1: tradeexecutionservice.ExecutionStatusType
	(*ExecuteTradesRequest)(nil),      // 2: tradeexecutionservice.ExecuteTradesRequest
	(*Order)(nil),                     // 3: tradeexecutionservice.Order
	(*ExecuteTradesResponse)(nil),     // 4: tradeexecutionservice.ExecuteTradesResponse
	(*OrderExecutionResult)(nil),      // 5: tradeexecutionservice.OrderExecutionResult
	(*GetExecutionStatusRequest)(nil), // 6: tradeexecutionservice.GetExecutionStatusRequest
	(*ExecutionStatus)(nil),           // 7: tradeexecutionservice.ExecutionStatus
}
var file_trade_execution_service_proto_depIdxs = []int32{
	3, // 0: tradeexecutionservice.ExecuteTradesRequest.orders:type_name -> tradeexecutionservice.Order
	0, // 1: tradeexecutionservice.Order.type:type_name -> tradeexecutionservice.OrderType
	5, // 2: tradeexecutionservice.ExecuteTradesResponse.results:type_name -> tradeexecutionservice.OrderExecutionResult
	7, // 3: tradeexecutionservice.OrderExecutionResult.status:type_name -> tradeexecutionservice.ExecutionStatus
	1, // 4: tradeexecutionservice.ExecutionStatus.status:type_name -> tradeexecutionservice.ExecutionStatusType
	5, // 5: tradeexecutionservice.ExecutionStatus.results:type_name -> tradeexecutionservice.OrderExecutionResult
	2, // 6: tradeexecutionservice.TradeExecutionService.ExecuteTrades:input_type -> tradeexecutionservice.ExecuteTradesRequest
	6, // 7: tradeexecutionservice.TradeExecutionService.GetExecutionStatus:input_type -> tradeexecutionservice.GetExecutionStatusRequest
	4, // 8: tradeexecutionservice.TradeExecutionService.ExecuteTrades:output_type -> tradeexecutionservice.ExecuteTradesResponse
	7, // 9: tradeexecutionservice.TradeExecutionService.GetExecutionStatus:output_type -> tradeexecutionservice.ExecutionStatus
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_trade_execution_service_proto_init() }
func file_trade_execution_service_proto_init() {
	if File_trade_execution_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trade_execution_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ExecuteTradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_execution_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_execution_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ExecuteTradesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_execution_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*OrderExecutionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_execution_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetExecutionStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_execution_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ExecutionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trade_execution_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trade_execution_service_proto_goTypes,
		DependencyIndexes: file_trade_execution_service_proto_depIdxs,
		EnumInfos:         file_trade_execution_service_proto_enumTypes,
		MessageInfos:      file_trade_execution_service_proto_msgTypes,
	}.Build()
	File_trade_execution_service_proto = out.File
	file_trade_execution_service_proto_rawDesc = nil
	file_trade_execution_service_proto_goTypes = nil
	file_trade_execution_service_proto_depIdxs = nil
}
